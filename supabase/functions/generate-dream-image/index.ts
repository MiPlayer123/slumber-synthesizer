
import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.7.1'

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { dreamId, description } = await req.json();
    
    console.log('Generating image for dream:', dreamId);
    console.log('Description:', description);

    const prompt = `Generate a dreamy, artistic image of: ${description}. Make it surreal and dreamlike.`;

    // Call Mistral API for image generation
    const response = await fetch('https://api.mistral.ai/v1/images/generate', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${Deno.env.get('MISTRAL_API_KEY')}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        prompt,
        model: "mistral-medium",
        n: 1,
      }),
    });

    if (!response.ok) {
      const error = await response.text();
      console.error('Mistral API error:', error);
      throw new Error(`Mistral API error: ${error}`);
    }

    const data = await response.json();
    console.log('Mistral API response:', data);

    // Check if data.images exists and has at least one item
    if (!data.images || !data.images[0]) {
      throw new Error('No image generated by Mistral API');
    }

    const imageUrl = data.images[0];

    // Update the dream with the generated image URL
    const supabase = createClient(
      Deno.env.get('SUPABASE_URL') ?? '',
      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') ?? ''
    );

    const { error: updateError } = await supabase
      .from('dreams')
      .update({ image_url: imageUrl })
      .eq('id', dreamId);

    if (updateError) {
      console.error('Error updating dream:', updateError);
      throw updateError;
    }

    return new Response(
      JSON.stringify({ success: true, imageUrl }),
      { headers: { ...corsHeaders, 'Content-Type': 'application/json' } },
    );
  } catch (error) {
    console.error('Error in generate-dream-image function:', error);
    return new Response(
      JSON.stringify({ error: error.message }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500
      },
    );
  }
});
